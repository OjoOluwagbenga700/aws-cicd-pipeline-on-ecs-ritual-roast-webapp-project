version: 0.2
phases:
  pre_build:
     commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPOSITORY_NAME
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
  build:
    commands:
      - echo Build started on `date`
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
      
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Creating task definition...
      - |
        cat > taskdefinition.json << EOF
        {
          "family": "$TASK_FAMILY",
          "networkMode": "awsvpc",
          "requiresCompatibilities": ["FARGATE"],
          "cpu": "$TASK_CPU",
          "memory": "$TASK_MEMORY",
          "executionRoleArn": "$EXECUTION_ROLE_ARN",
          "taskRoleArn": "$TASK_ROLE_ARN",
          "containerDefinitions": [
            {
              "name": "$CONTAINER_NAME",
              "image": "$REPOSITORY_URI:$IMAGE_TAG",
              "portMappings": [
                {
                  "containerPort": 80,
                  "protocol": "tcp"
                }
              ],
              "essential": true,
              "environment": [
                {
                  "name": "DB_HOST",
                  "value": "$DB_HOST_PARAM"
                },
                {
                  "name": "DB_NAME",
                  "value": "$DB_NAME_PARAM"
                },
                {
                  "name": "DB_USERNAME",
                  "value": "$DB_USERNAME_PARAM"
                },
                {
                  "name": "DB_PASSWORD",
                  "value": "$DB_PASSWORD_PARAM"
                }
              ],
              "logConfiguration": {
                "logDriver": "awslogs",
                "options": {
                  "awslogs-group": "$LOG_GROUP_NAME",
                  "awslogs-region": "$AWS_DEFAULT_REGION",
                  "awslogs-stream-prefix": "ritual-roast"
                }
              }
            }
          ]
        }
        EOF
      - echo Writing image definitions file...
      - printf '[{"name":"%s","imageUri":"%s"}]' "$CONTAINER_NAME" "$REPOSITORY_URI:$IMAGE_TAG" | tee imagedefinitions.json
artifacts:
  files: 
    - imagedefinitions.json
    - taskdefinition.json